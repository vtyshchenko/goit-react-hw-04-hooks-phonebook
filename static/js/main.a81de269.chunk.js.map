{"version":3,"sources":["components/Phonebook/AddContact/AddContact.module.scss","components/Phonebook/Phonebook.module.scss","components/Phonebook/Filter/Filter.module.scss","components/Phonebook/Contacts/ContactsItem/ContactsItem.module.scss","components/Phonebook/Contacts/Contacts.module.scss","components/Phonebook/Contacts/ContactsItem/ContactsItem.js","components/Phonebook/Contacts/Contacts.js","components/Phonebook/AddContact/AddContact.js","components/Phonebook/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactsItem","item","onDelete","name","number","className","styles","button","type","onClick","id","Contacts","contctsList","length","map","contactsItem","AddContact","onSubmit","useState","namePeople","setNamePeople","setNumber","handleChange","target","value","event","preventDefault","nanoid","form","label","input","placeholder","pattern","title","required","onChange","Filter","filter","Phonebook","contacts","setContacts","setFilter","useEffect","contactsLoad","localStorage","getItem","JSON","parse","setItem","stringify","contactsFiltered","filterLC","toLowerCase","contactItem","includes","getContacts","isShowFilter","componenet","find","contact","alert","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a81de269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__bU793\",\"input\":\"AddContact_input__1ikse\",\"label\":\"AddContact_label__2t3jA\",\"button\":\"AddContact_button__1-BL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"componenet\":\"Phonebook_componenet__2hpso\",\"title\":\"Phonebook_title__2MIbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3dEfW\",\"label\":\"Filter_label__25Til\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsItem_button__EYi4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__34sdt\"};","import styles from './ContactsItem.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ item, onDelete }) => (\n  <>\n    <span>\n      {item.name}: {item.number}\n    </span>\n\n    <button className={styles.button} type=\"button\" onClick={() => onDelete(item.id)}>\n      Delete\n    </button>\n  </>\n);\n\nContactsItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import PropTypes from 'prop-types';\n\nimport ContactsItem from './ContactsItem';\nimport styles from './Contacts.module.scss';\n\nfunction Contacts({ contctsList, onDelete }) {\n  return contctsList.length > 0 ? (\n    <ul>\n      {contctsList.map(contactsItem => (\n        <li key={contactsItem.id} className={styles.item}>\n          <ContactsItem item={contactsItem} onDelete={onDelete} />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>No contacts here</p>\n  );\n}\n\nContacts.propTypes = {\n  contctsList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport { useState } from 'react';\n\nimport styles from './AddContact.module.scss';\n\nfunction AddContact({ onSubmit }) {\n  const [namePeople, setNamePeople] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'number') {\n      setNumber(value);\n    } else {\n      setNamePeople(value);\n    }\n  };\n\n  function reset() {\n    setNamePeople('');\n    setNumber('');\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const id = nanoid();\n    onSubmit({ namePeople, number, id });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"namePeople\"\n          placeholder=\"John Jonson\"\n          value={namePeople}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"123-55-66\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nAddContact.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default AddContact;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nfunction Filter({ onChange, filter }) {\n  return (\n    <>\n      <label className={styles.label}>\n        Find contscts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"John Jonson\"\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\n\nimport styles from './Phonebook.module.scss';\nimport Contacts from './Contacts';\nimport AddContact from './AddContact';\nimport Filter from './Filter';\n\nfunction Phonebook() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    let contactsLoad = localStorage.getItem('contacts');\n    if (contactsLoad) {\n      contactsLoad = JSON.parse(contactsLoad);\n      contactsLoad && setContacts([...contactsLoad]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = ({ id, namePeople, number }) => {\n    if (contacts.find(contact => namePeople.toLowerCase() === contact.name.toLowerCase())) {\n      alert(`${namePeople} is alredy in contacts`);\n    } else {\n      setContacts(state => [...state, { id, name: namePeople, number }]);\n    }\n  };\n\n  const handleOnFiler = event => {\n    setFilter(event.target.value);\n  };\n\n  const handleDeleteContact = id => {\n    setContacts(state => state.filter(contactItem => contactItem.id !== id));\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  };\n\n  function getContacts() {\n    const filterLC = filter.toLowerCase();\n    return contacts.filter(contactItem => contactItem.name.toLowerCase().includes(filterLC));\n  }\n\n  const contactsFiltered = getContacts();\n  const isShowFilter = contacts.length > 1;\n\n  return (\n    <div className={styles.componenet}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <AddContact onSubmit={handleAddContact} />\n      <h2 className={styles.title}>Contacts</h2>\n      {isShowFilter && <Filter filter={filter} onChange={handleOnFiler} />}\n      <Contacts contctsList={contactsFiltered} onDelete={handleDeleteContact} />\n    </div>\n  );\n}\n\nexport default Phonebook;\n","import './App.scss';\n\nimport Phonebook from './components/Phonebook';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}